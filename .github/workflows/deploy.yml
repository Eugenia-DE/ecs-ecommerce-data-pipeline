name: Deploy ECS Tasks and Step Function

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-1
  VALIDATION_REPO: 605134436600.dkr.ecr.eu-west-1.amazonaws.com/ecommerce-validation
  TRANSFORMATION_REPO: 605134436600.dkr.ecr.eu-west-1.amazonaws.com/ecommerce-transformation
  STEP_FUNCTION_NAME: ecommerce-kpi-state-machine

jobs:
  deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Install AWS CLI v2 and update PATH
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --install-dir /usr/local/aws-cli --bin-dir /usr/local/bin --update
        export PATH=/usr/local/bin:$PATH
        aws --version

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Validation Container
      run: |
        docker build -t $VALIDATION_REPO:latest ./ecs/validation
        docker push $VALIDATION_REPO:latest

    - name: Build Transformation Container
      run: |
        docker build -t $TRANSFORMATION_REPO:latest ./ecs/transformation
        docker push $TRANSFORMATION_REPO:latest

    - name: Deploy Step Function Definition
      run: |
        export PATH=/usr/local/bin:$PATH
        STATE_MACHINE_ARN=$(aws stepfunctions list-state-machines --query "stateMachines[?name=='$STEP_FUNCTION_NAME'].stateMachineArn" --output text)

        if [ -z "$STATE_MACHINE_ARN" ]; then
          echo "Creating Step Function..."
          aws stepfunctions create-state-machine \
            --name $STEP_FUNCTION_NAME \
            --role-arn arn:aws:iam::605134436600:role/StepFunctionsECSExecutionRole \
            --definition file://infra/step-function-definition.json \
            --type STANDARD
        else
          echo "Updating Step Function..."
          aws stepfunctions update-state-machine \
            --state-machine-arn $STATE_MACHINE_ARN \
            --definition file://infra/step-function-definition.json \
            --role-arn arn:aws:iam::605134436600:role/StepFunctionsECSExecutionRole
        fi

    - name: Attach EventBridge Resource Policy to Step Function
      run: |
        export PATH=/usr/local/bin:$PATH
        echo "Attaching resource policy to allow EventBridge to start the state machine..."
        aws stepfunctions put-resource-policy \
          --resource-arn arn:aws:states:${{ env.AWS_REGION }}:605134436600:stateMachine:${{ env.STEP_FUNCTION_NAME }} \
          --statement '{
            "Effect": "Allow",
            "Principal": {
              "Service": "events.amazonaws.com"
            },
            "Action": "states:StartExecution",
            "Resource": "arn:aws:states:${{ env.AWS_REGION }}:605134436600:stateMachine:${{ env.STEP_FUNCTION_NAME }}"
          }'
